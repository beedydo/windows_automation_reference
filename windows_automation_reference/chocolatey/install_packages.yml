---

# Since we will not need or use any of the facts gathered by Ansible, we have disabled fact gathering by setting gather_facts: false to decrease overhead. 
# We also defined one dictionary variable named choco_packages under the vars directive to hold the names and versions of the packages we want to install using Chocolatey.
- name: Install Specific versions of packages using Chocolatey
  hosts: all
  gather_facts: false
  vars:
    choco_packages:
      - name: nodejs
        version: 13.0.0
      - name: python
        version: 3.6.0

  tasks:

    # This task uses the win_chocolatey module from the chocolatey.chocolatey collection,
    # and will loop over the choco_packages variable to install each product with the specified version
    - name: Install specific versions of packages sequentially
      chocolatey.chocolatey.win_chocolatey:
        name: "{{ item.name }}"
        version: "{{ item.version }}"
        force: yes
      loop: "{{ choco_packages }}"

    # This following 2 tasks uses the win_command module from the ansible.windows collection to execute commands to:
    # check the version of python and node respectively, registering the output of each.
    - name: Check python version
      ansible.windows.win_command: python --version
      register: check_python_version

    - name: Check nodejs version
      ansible.windows.win_command: node --version
      register: check_node_version

    # This task used the debug module from the ansible.builtin collection to display a message containing the information gathered in steps 2 and 3.
    - ansible.builtin.debug:
        msg: Python Version is {{ check_python_version.stdout_lines[0] }} and NodeJS version is {{ check_node_version.stdout_lines[0] }}